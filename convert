#!/bin/sh

# options
input=$1
outro_duration=150
fade_duration=50
quality=5           # 1 is best, 31 is worst

# src files
outro_img='img/outro.jpg'
watermark='img/watermark.png'

# tmp files
outro='tmp/outro.mpg'
temp='tmp/temp.mpg'
master='tmp/master.mpg'
temp_mp4='tmp/temp.mp4'

# output files
name=$(basename $input)
name=${name%.*}
screen="output/${name}_screen.jpg"
mp4_1280="output/${name}_1280.mp4"
ogv_1280="output/${name}_1280.ogv"
mp4_360="output/${name}_360.mp4"
ogv_360="output/${name}_360.ogv"

# calculate the total number of frames (required for fade in/out)
frames=`tcprobe -i $input | grep -o -P "(?<=\blength:\s)(\w+)"`
offset=`expr $frames - $fade_duration - 5`
outro_offset=`expr $outro_duration - $fade_duration - 5`



#-----------------------------------------------------------------------------#
# PRE-PROCESSING
#-----------------------------------------------------------------------------#

# if needed, create an outro mpeg from a jpeg
if [ ! -e $outro ]
then
  ffmpeg -loop_input -vframes $outro_duration -i $outro_img -vf \
    "scale=1280:960, fade=in:0:$fade_duration, fade=out:$outro_offset:$fade_duration" \
    -r 30 -qscale $quality $outro
fi

# create an temp mpeg from input (watermark + fade included)
ffmpeg -i $input -vf \
  "movie=$watermark [logo]; [in][logo] overlay=main_w-overlay_w-10:main_h-overlay_h-10, fade=in:0:$fade_duration, fade=out:$offset:$fade_duration [out]" \
  -r 30 -qscale $quality -y $temp

# join the input with the outro
cat $temp $outro > $master

# grab a screenshot image from 10 seconds in
ffmpeg -ss 10 -i $master -f image2 -vframes 1 -y $screen



#-----------------------------------------------------------------------------#
# OUTPUT
#-----------------------------------------------------------------------------#

# 1280x960 .mp4
ffmpeg -i $master -s 1280x960 -acodec libfaac -aq 50 -vcodec libx264 -preset slow -crf 30 -tune animation -threads 0 -y $temp_mp4
qt-faststart $temp_mp4 $mp4_1280

# 1280x960 .ogv
ffmpeg2theora $mp4_1280 --optimize -o $ogv_1280

# 360x270 .mp4
ffmpeg -i $mp4_1280 -s 360x270 -acodec libfaac -aq 50 -vcodec libx264 -preset slow -crf 30 -tune animation -threads 0 $mp4_360

# 360x270 .ogv
ffmpeg2theora $mp4_360 --optimize -o $ogv_360

